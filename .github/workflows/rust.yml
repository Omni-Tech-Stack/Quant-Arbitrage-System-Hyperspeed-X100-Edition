name: Rust

on:
  push:
    branches: [ main ]
    paths:
      - 'ultra-fast-arbitrage-engine/native/**'
      - '.github/workflows/rust.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'ultra-fast-arbitrage-engine/native/**'
      - '.github/workflows/rust.yml'

jobs:
  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run cargo check
        working-directory: ./ultra-fast-arbitrage-engine/native
        run: cargo check

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run cargo test
        working-directory: ./ultra-fast-arbitrage-engine/native
        run: cargo test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt
      - name: Run cargo fmt
        working-directory: ./ultra-fast-arbitrage-engine/native
        run: cargo fmt --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: clippy
      - name: Run cargo clippy
        working-directory: ./ultra-fast-arbitrage-engine/native
        run: cargo clippy -- -D warnings

  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Build release
        working-directory: ./ultra-fast-arbitrage-engine/native
        run: cargo build --release
