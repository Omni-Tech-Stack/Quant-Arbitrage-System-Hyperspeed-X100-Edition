{
  "timestamp": "2025-10-18T23:16:53.717Z",
  "repository": "Quant-Arbitrage-System-Hyperspeed-X100-Edition",
  "totalModules": 3,
  "fileStatistics": {
    ".js": 25,
    ".ts": 1,
    ".json": 20,
    ".md": 49,
    ".py": 34
  },
  "totalTestFiles": 36,
  "testFiles": [
    "backend/test-results/feature-test-results-1760680760295.json",
    "backend/test-results/feature-test-results-1760829070291.json",
    "backend/test-results/feature-test-results-1760829178980.json",
    "backend/test-results/unit-test-results-1760680760093.json",
    "backend/test-results/unit-test-results-1760829070082.json",
    "backend/test-results/unit-test-results-1760829178772.json",
    "backend/tests/end-to-end-workflow.test.js",
    "backend/tests/feature/arbitrage-scenarios.test.js",
    "backend/tests/flashloan-api.test.js",
    "backend/tests/run-all-tests.js",
    "backend/tests/unit/api.test.js",
    "backend/tests/web3-integration.test.js",
    "models/arb_ml_latest.pkl",
    "scripts/backtesting.py",
    "scripts/test_merkle_sender.py",
    "scripts/test_opportunity_detector.py",
    "scripts/test_registry_integrity.py",
    "scripts/test_simulation.py",
    "test-flashloan-integration.js",
    "test_all_js_modules.sh",
    "test_all_python_modules.sh",
    "test_dual_ai_system.py",
    "tests/__pycache__/run_all_tests.cpython-312.pyc",
    "tests/__pycache__/test_core_modules.cpython-312.pyc",
    "tests/__pycache__/test_opportunity_detector.cpython-312.pyc",
    "tests/__pycache__/test_pool_registry.cpython-312.pyc",
    "tests/__pycache__/test_tvl_fetchers.cpython-312.pyc",
    "tests/run_all_tests.py",
    "tests/test_core_modules.py",
    "tests/test_opportunity_detector.py",
    "tests/test_pool_registry.py",
    "tests/test_tvl_fetchers.py",
    "ultra-fast-arbitrage-engine/test-arbitrage-flow.js",
    "ultra-fast-arbitrage-engine/test-setup.js",
    "ultra-fast-arbitrage-engine/test-verbose.js",
    "ultra-fast-arbitrage-engine/test.js"
  ],
  "moduleStatistics": [
    {
      "name": "Backend API",
      "path": "backend",
      "fileCounts": {
        ".js": 10,
        ".ts": 0,
        ".json": 9,
        ".md": 3,
        ".py": 0
      },
      "testFiles": [
        "test-results/feature-test-results-1760680760295.json",
        "test-results/feature-test-results-1760829070291.json",
        "test-results/feature-test-results-1760829178980.json",
        "test-results/unit-test-results-1760680760093.json",
        "test-results/unit-test-results-1760829070082.json",
        "test-results/unit-test-results-1760829178772.json",
        "tests/end-to-end-workflow.test.js",
        "tests/feature/arbitrage-scenarios.test.js",
        "tests/flashloan-api.test.js",
        "tests/run-all-tests.js",
        "tests/unit/api.test.js",
        "tests/web3-integration.test.js"
      ],
      "testFileCount": 12
    },
    {
      "name": "Ultra-Fast Arbitrage Engine",
      "path": "ultra-fast-arbitrage-engine",
      "fileCounts": {
        ".js": 9,
        ".ts": 1,
        ".json": 3,
        ".md": 18,
        ".py": 0
      },
      "testFiles": [
        "test-arbitrage-flow.js",
        "test-setup.js",
        "test-verbose.js",
        "test.js"
      ],
      "testFileCount": 4
    },
    {
      "name": "Frontend",
      "path": "frontend",
      "fileCounts": {
        ".js": 1,
        ".ts": 0,
        ".json": 2,
        ".md": 0,
        ".py": 0
      },
      "testFiles": [],
      "testFileCount": 0
    }
  ],
  "testResults": [
    {
      "module": "Backend API",
      "success": true,
      "output": "\n> arbitrage-backend@1.0.0 test\n> node tests/run-all-tests.js\n\n\n================================================================================\n\u001b[1m\u001b[36m  API Comprehensive Test Suite Runner\u001b[0m\n================================================================================\n\n\u001b[1mStarting comprehensive API testing...\u001b[0m\n\u001b[36mTarget API: http://localhost:3001\n\u001b[0m\n\u001b[36mChecking if server is already running...\u001b[0m\n\u001b[33mServer not detected. Starting server...\u001b[0m\n\u001b[36mWaiting 3000ms for server to start...\u001b[0m\n[Server] Backend API server running on 0.0.0.0:3001\n[Server] WebSocket server ready for real-time updates\nCORS: Accepting requests from all origins (no firewall restrictions)\n\u001b[32m✓ Server started successfully\u001b[0m\n\u001b[1m\u001b[34m\nRunning Test Suites\u001b[0m\n--------------------------------------------------------------------------------\n\u001b[36m\nRunning Unit Tests...\u001b[0m\n\nStarting API Unit Tests...\nAPI Base URL: http://localhost:3001\n\n✓ Health Check - GET /api/health (24ms)\n✓ Get Opportunities - GET /api/opportunities (2ms)\n✓ Get Trades - GET /api/trades (3ms)\n✓ Get Trades with Limit - GET /api/trades?limit=10 (3ms)\n✓ Get Statistics - GET /api/stats (2ms)\n✓ Post Opportunity - POST /api/opportunities (9ms)\n✓ Post Trade - POST /api/trades (2ms)\n✓ Calculate Flashloan - POST /api/calculate-flashloan (2ms)\n✓ Calculate Market Impact - POST /api/calculate-impact (2ms)\n✓ Simulate Parallel Paths - POST /api/simulate-paths (3ms)\n✓ Invalid Endpoint - GET /api/invalid (4ms)\n✓ Post Opportunity with Missing Fields - POST /api/opportunities (1ms)\n✓ Concurrent Requests - Multiple GET /api/health (17ms)\n✓ Large Payload - POST /api/opportunities (3ms)\n✓ Rapid Sequential Requests - POST opportunities (27ms)\n\n================================================================================\nAPI UNIT TEST RESULTS\n================================================================================\n\nTest Details:\n--------------------------------------------------------------------------------\nTest Name                                               Status Duration\n--------------------------------------------------------------------------------\nHealth Check - GET /api/health                          \u001b[32m✓ PASS\u001b[0m 24ms\nGet Opportunities - GET /api/opportunities              \u001b[32m✓ PASS\u001b[0m 2ms\nGet Trades - GET /api/trades                            \u001b[32m✓ PASS\u001b[0m 3ms\nGet Trades with Limit - GET /api/trades?limit=10        \u001b[32m✓ PASS\u001b[0m 3ms\nGet Statistics - GET /api/stats                         \u001b[32m✓ PASS\u001b[0m 2ms\nPost Opportunity - POST /api/opportunities              \u001b[32m✓ PASS\u001b[0m 9ms\nPost Trade - POST /api/trades                           \u001b[32m✓ PASS\u001b[0m 2ms\nCalculate Flashloan - POST /api/calculate-flashloan     \u001b[32m✓ PASS\u001b[0m 2ms\nCalculate Market Impact - POST /api/calculate-impact    \u001b[32m✓ PASS\u001b[0m 2ms\nSimulate Parallel Paths - POST /api/simulate-paths      \u001b[32m✓ PASS\u001b[0m 3ms\nInvalid Endpoint - GET /api/invalid                     \u001b[32m✓ PASS\u001b[0m 4ms\nPost Opportunity with Missing Fields - POST /api/opportunities \u001b[32m✓ PASS\u001b[0m 1ms\nConcurrent Requests - Multiple GET /api/health          \u001b[32m✓ PASS\u001b[0m 17ms\nLarge Payload - POST /api/opportunities                 \u001b[32m✓ PASS\u001b[0m 3ms\nRapid Sequential Requests - POST opportunities          \u001b[32m✓ PASS\u001b[0m 27ms\n--------------------------------------------------------------------------------\n\nSummary:\n  Total Tests:       15\n  Passed:            \u001b[32m15\u001b[0m\n  Failed:            \u001b[31m0\u001b[0m\n  Success Rate:      100.00%\n================================================================================\n\nResults saved to: /home/runner/work/Quant-Arbitrage-System-Hyperspeed-X100-Edition/Quant-Arbitrage-System-Hyperspeed-X100-Edition/backend/test-results/unit-test-results-1760829411604.json\n\u001b[36m\nRunning Feature/Scenario Tests...\u001b[0m\n\nStarting Feature/Scenario Tests...\nAPI Base URL: http://localhost:3001\n\nScenario 1: Complete Profitable Arbitrage Workflow\n    ✓ Detect price difference between DEXs\n    ✓ Calculate optimal flashloan amount\n    ✓ Calculate market impact\n    ✓ Create opportunity\n    ✓ Execute trade\n    ✓ Verify statistics updated\n  ✓ Complete Profitable Arbitrage Workflow (36ms)\n\nScenario 2: Unprofitable Opportunity Detection\n    ✓ Calculate flashloan for equal prices\n    ✓ Create unprofitable opportunity\n    ✓ Record failed trade\n  ✓ Unprofitable Opportunity Detection (6ms)\n\nScenario 3: Multi-Path Arbitrage Analysis\n    ✓ Simulate parallel paths\n    ✓ Select best path\n    ✓ Execute multi-hop trade\n  ✓ Multi-Path Arbitrage Analysis (6ms)\n\nScenario 4: High-Frequency Trading Simulation\n    ✓ Create 10 rapid opportunities\n    ✓ Execute 10 rapid trades\n    ✓ Verify all trades recorded\n  ✓ High-Frequency Trading Simulation (36ms)\n\nScenario 5: Stablecoin Arbitrage (Low Slippage)\n    ✓ Calculate stablecoin market impact\n    ✓ Create stablecoin opportunity\n    ✓ Execute low-slippage stablecoin trade\n  ✓ Stablecoin Arbitrage (Low Slippage) (5ms)\n\nScenario 6: MEV Bundle Submission Workflow\n    ✓ Create MEV bundle opportunities\n    ✓ Execute MEV bundle\n    ✓ Verify bundle stats\n  ✓ MEV Bundle Submission Workflow (9ms)\n\nScenario 7: Market Condition Change Response\n    ✓ Detect opportunity under favorable conditions\n    ✓ Recalculate after market change\n    ✓ Cancel trade due to market change\n  ✓ Market Condition Change Response (4ms)\n\n\n================================================================================\nFEATURE/SCENARIO TEST RESULTS\n================================================================================\n\nScenario Details:\n--------------------------------------------------------------------------------\n\n\u001b[32m✓ PASS\u001b[0m Complete Profitable Arbitrage Workflow (36ms)\n  Steps: 6\n\n\u001b[32m✓ PASS\u001b[0m Unprofitable Opportunity Detection (6ms)\n  Steps: 3\n\n\u001b[32m✓ PASS\u001b[0m Multi-Path Arbitrage Analysis (6ms)\n  Steps: 3\n\n\u001b[32m✓ PASS\u001b[0m High-Frequency Trading Simulation (36ms)\n  Steps: 3\n\n\u001b[32m✓ PASS\u001b[0m Stablecoin Arbitrage (Low Slippage) (5ms)\n  Steps: 3\n\n\u001b[32m✓ PASS\u001b[0m MEV Bundle Submission Workflow (9ms)\n  Steps: 3\n\n\u001b[32m✓ PASS\u001b[0m Market Condition Change Response (4ms)\n  Steps: 3\n\n--------------------------------------------------------------------------------\n\nSummary:\n  Total Scenarios:   7\n  Passed:            \u001b[32m7\u001b[0m\n  Failed:            \u001b[31m0\u001b[0m\n  Success Rate:      100.00%\n================================================================================\n\nResults saved to: /home/runner/work/Quant-Arbitrage-System-Hyperspeed-X100-Edition/Quant-Arbitrage-System-Hyperspeed-X100-Edition/backend/test-results/feature-test-results-1760829411819.json\n\n================================================================================\n\u001b[1m\u001b[36m  COMPREHENSIVE TEST RESULTS\u001b[0m\n================================================================================\n\n\u001b[1m\u001b[34m\nTest Suite Execution\u001b[0m\n--------------------------------------------------------------------------------\nSuite Name                               Status Duration\n--------------------------------------------------------------------------------\nUnit Tests                               \u001b[32m✓ PASS\u001b[0m 217ms\nFeature/Scenario Tests                   \u001b[32m✓ PASS\u001b[0m 215ms\n\u001b[1m\u001b[34m\nUnit Tests Summary\u001b[0m\n--------------------------------------------------------------------------------\n  Total Tests:       15\n  Passed:            \u001b[32m15\u001b[0m\n  Failed:            \u001b[31m0\u001b[0m\n  Success Rate:      100.00%\n\u001b[1m\u001b[34m\nFeature/Scenario Tests Summary\u001b[0m\n--------------------------------------------------------------------------------\n  Total Scenarios:   7\n  Passed:            \u001b[32m7\u001b[0m\n  Failed:            \u001b[31m0\u001b[0m\n  Success Rate:      100.00%\n\u001b[1m\u001b[34m\nOverall Summary\u001b[0m\n--------------------------------------------------------------------------------\n  Total Tests & Scenarios: 22\n  Total Passed:            \u001b[32m22\u001b[0m\n  Total Failed:            \u001b[31m0\u001b[0m\n  Overall Success Rate:    100.00%\n\n================================================================================\n\u001b[1m\u001b[32m\n✓ ALL TESTS PASSED - API is production-ready!\u001b[0m\n================================================================================\n\n\u001b[36mComprehensive report saved to: /home/runner/work/Quant-Arbitrage-System-Hyperspeed-X100-Edition/Quant-Arbitrage-System-Hyperspeed-X100-Edition/backend/test-results/comprehensive-report.json\u001b[0m\n\u001b[36mMarkdown report saved to: /home/runner/work/Quant-Arbitrage-System-Hyperspeed-X100-Edition/Quant-Arbitrage-System-Hyperspeed-X100-Edition/backend/test-results/TEST-REPORT.md\u001b[0m\n\u001b[36m\nStopping server...\u001b[0m\n\u001b[32m✓ Server stopped\u001b[0m\n"
    },
    {
      "module": "Ultra-Fast Arbitrage Engine",
      "success": true,
      "output": "\n> ultra-fast-arbitrage-engine@1.0.0 test\n> node test.js\n\n\n=== SYSTEM INTEGRATION TEST ===\n\n✓ Uniswap V2 slippage calculation\n✓ Uniswap V3 slippage calculation\n✓ Curve slippage calculation\n✓ Balancer slippage calculation\n✓ Aggregator returns minimum slippage\n✓ Optimal trade size for profitable scenario\n✓ Optimal trade size for unprofitable scenario\n✓ Large trade shows higher slippage than small trade\n✓ Functions handle zero trade size\n✓ Full arbitrage workflow integration\n✓ Flashloan amount calculation for profitable arbitrage\n✓ Flashloan amount returns zero for unprofitable arbitrage\n✓ Market impact increases with trade size\n✓ Multi-hop slippage calculation for flashloan path\n✓ Simulate multiple flashloan paths simultaneously\n✓ Flashloan amount calculation for Uniswap V3\n✓ Market impact handles edge cases\n  Flashloan: 212132.03, Buy Impact: 21.2132%, Sell Impact: 16.6261%\n✓ Complete flashloan arbitrage workflow\n  Best path: 2, Profit: -1443.83\n✓ Parallel path simulation finds best opportunity\n  Total slippage: 5.6953%, Impacts: 2.5000%, 2.4319%, 2.3672%\n✓ Flashloan execution through multiple DEX types\n\n=== TEST SUMMARY ===\nTests passed: 20\nTests failed: 0\nTotal tests: 20\n\n✓ ALL TESTS PASSED - System integration verified!\n\n"
    },
    {
      "module": "Frontend",
      "success": true,
      "skipped": true
    }
  ],
  "summary": {
    "passed": 2,
    "failed": 0,
    "skipped": 1,
    "successRate": 100
  }
}